{"ast":null,"code":"var _jsxFileName = \"/home/mauzeroffc/\\u041C\\u0443\\u0437\\u044B\\u043A\\u0430/programming/js/react/tiktoe12/movie/src/Movie.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet words_counter = description => {\n  let matches = description.split(/\\s+/) || []; //word count\n\n  if (matches.length > 33) {\n    return description.slice(0, 180) + \"...\";\n  } else {\n    return description;\n  }\n};\nlet genres_counter = (genres, id) => {\n  genres.map((genre, id) => {\n    if (genres.length > 1) {\n      return genre + \", \";\n    }\n    return genre;\n  });\n};\nfunction Movie(_ref) {\n  let {\n    id,\n    year,\n    title,\n    summary,\n    poster,\n    genres\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: poster,\n      alt: title,\n      title: title,\n      className: \"m-10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"movie_title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"movie_year\",\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: genres_counter(genres, id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie_summary\",\n        children: words_counter(summary)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n_c = Movie;\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","PropTypes","words_counter","description","matches","split","length","slice","genres_counter","genres","id","map","genre","Movie","year","title","summary","poster","propTypes","number","isRequired","string","arrayOf"],"sources":["/home/mauzeroffc/Музыка/programming/js/react/tiktoe12/movie/src/Movie.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nlet words_counter = (description) => {\n    let matches = description.split(/\\s+/) || [] //word count\n\n    if (matches.length > 33) {\n      return description.slice(0, 180) + \"...\"\n    }\n    else {\n        return description\n    }\n}\n\nlet genres_counter = (genres, id) => {\n    genres.map((genre, id) => {\n        if (genres.length > 1) {\n            return genre + \", \"\n        }\n        return genre\n    })\n}\n\nfunction Movie({id, year, title, summary, poster, genres}) {\n    return <div className=\"movie\">\n            <img src={poster} alt={title} title={title} className=\"m-10\"/>\n            <div className=\"movie_column\">\n                <h3 className=\"movie_title\">{title}</h3>\n                <h5 className=\"movie_year\">{year}</h5>\n                <h4>{genres_counter(genres, id)}</h4>\n                <p className=\"movie_summary\">{words_counter(summary)}</p>\n            </div>\n           </div>\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,aAAa;AAAC;AAErB,IAAIC,aAAa,GAAIC,WAAW,IAAK;EACjC,IAAIC,OAAO,GAAGD,WAAW,CAACE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAC;;EAE7C,IAAID,OAAO,CAACE,MAAM,GAAG,EAAE,EAAE;IACvB,OAAOH,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;EAC1C,CAAC,MACI;IACD,OAAOJ,WAAW;EACtB;AACJ,CAAC;AAED,IAAIK,cAAc,GAAG,CAACC,MAAM,EAAEC,EAAE,KAAK;EACjCD,MAAM,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEF,EAAE,KAAK;IACtB,IAAID,MAAM,CAACH,MAAM,GAAG,CAAC,EAAE;MACnB,OAAOM,KAAK,GAAG,IAAI;IACvB;IACA,OAAOA,KAAK;EAChB,CAAC,CAAC;AACN,CAAC;AAED,SAASC,KAAK,OAA6C;EAAA,IAA5C;IAACH,EAAE;IAAEI,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC,MAAM;IAAER;EAAM,CAAC;EACrD,oBAAO;IAAK,SAAS,EAAC,OAAO;IAAA,wBACrB;MAAK,GAAG,EAAEQ,MAAO;MAAC,GAAG,EAAEF,KAAM;MAAC,KAAK,EAAEA,KAAM;MAAC,SAAS,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9D;MAAK,SAAS,EAAC,cAAc;MAAA,wBACzB;QAAI,SAAS,EAAC,aAAa;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACxC;QAAI,SAAS,EAAC,YAAY;QAAA,UAAED;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eACtC;QAAA,UAAKN,cAAc,CAACC,MAAM,EAAEC,EAAE;MAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eACrC;QAAG,SAAS,EAAC,eAAe;QAAA,UAAER,aAAa,CAACc,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACvD;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AACjB;AAAC,KAVQH,KAAK;AAYdA,KAAK,CAACK,SAAS,GAAG;EACdR,EAAE,EAAET,SAAS,CAACkB,MAAM,CAACC,UAAU;EAC/BN,IAAI,EAAEb,SAAS,CAACkB,MAAM,CAACC,UAAU;EACjCL,KAAK,EAAEd,SAAS,CAACoB,MAAM,CAACD,UAAU;EAClCJ,OAAO,EAAEf,SAAS,CAACoB,MAAM,CAACD,UAAU;EACpCH,MAAM,EAAEhB,SAAS,CAACoB,MAAM,CAACD,UAAU;EACnCX,MAAM,EAAER,SAAS,CAACqB,OAAO,CAACrB,SAAS,CAACoB,MAAM,CAAC,CAACD;AAChD,CAAC;AAED,eAAeP,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}